name: Symfony
on:
  push:
    branches: [ "main" ]

inputs:
  ip_to_keep:
    description: 'The IP to keep in the whitelist.'
    required: false
    default: ''

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: jardin_partage_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '8.2'
      - uses: actions/checkout@v4
      - name: Copy .env.test.local
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install JavaScript Dependencies
        run: |
          php bin/console importmap:install
          php bin/console asset-map:compile
      - name: Create Database
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/jardin_partage_test
        run: |
          php bin/console doctrine:database:create --if-not-exists
          php bin/console doctrine:schema:update --force
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/jardin_partage_test
        run: vendor/bin/phpunit

  symfony-deploy:
    needs: symfony-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: build-php
        name: "Install dependencies"
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Getting runner public IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Whitelist IP on hosting & delete github old ones without 2FA
        shell: bash
        run: |
          set -e
          URL_ENCODED_PASSWORD=$(echo -n "${{ secrets.PASSWORD }}" | jq -sRr @uri)
          ENDPOINT="https://${{ secrets.SSH_USER }}:${URL_ENCODED_PASSWORD}@${{ secrets.SSH_HOST }}:2083/frontend/o2switch/o2switch-ssh-whitelist/index.live.php"

          echo "Get actual whitelisted IPs..."
          UNIQUE_IPS=$(curl -sX GET "$ENDPOINT?r=list" | jq -r '.data.list[]?.address' | sort -u)

          for address in $UNIQUE_IPS; do
            if [[ "$address" == "${{ inputs.ip_to_keep }}" ]]; then
              echo "Keep this IP: $address"
              continue
            fi
            echo "Delete this GitHub IP: $address (in & out)"
            curl -sX GET "$ENDPOINT?r=remove&address=$address&direction=in&port=22" | jq || true
            sleep 3
            curl -sX GET "$ENDPOINT?r=remove&address=$address&direction=out&port=22" | jq || true
            sleep 3
          done
          echo "All non-kept IPs deleted."

          echo "Attempt to whitelist current IP: ${{ steps.ip.outputs.ipv4 }}"
          curl -sX POST \
            -d "whitelist[address]=${{ steps.ip.outputs.ipv4 }}" \
            -d "whitelist[port]=22" \
            "$ENDPOINT?r=add" | jq

      - name: Deploy on main
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /public_html/
            git pull
            composer install
            php bin/console asset-map:compile
            php bin/console doctrine:migrations:migrate -n
            php bin/console cache:clear
            php bin/console cache:warmup
            chmod -R 777 var/*
            chmod -R 777 public/*
